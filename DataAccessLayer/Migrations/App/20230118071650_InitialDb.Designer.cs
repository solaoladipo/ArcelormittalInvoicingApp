// <auto-generated />
using System;
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations.App
{
    [DbContext(typeof(AppContext))]
    [Migration("20230118071650_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DTOS.AppModel.Beneficiary", b =>
                {
                    b.Property<Guid>("BeneficiaryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bankacctno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bankname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeneficiaryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeneficiaryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contactperson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Createdby")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datecreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("RCno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetupOption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sortcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tinno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vatno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneno")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BeneficiaryID");

                    b.ToTable("Beneficiary");
                });

            modelBuilder.Entity("DTOS.AppModel.CodingDetail", b =>
                {
                    b.Property<Guid>("ColdingDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ActualAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Allocate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CodingHeadColdingHeadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ColdingHeadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Particulars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TransactionFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("VAT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("WHT")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ColdingDetailsId");

                    b.HasIndex("CodingHeadColdingHeadId");

                    b.ToTable("CodingDetail");
                });

            modelBuilder.Entity("DTOS.AppModel.CodingHead", b =>
                {
                    b.Property<Guid>("ColdingHeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnotherCharges")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeneficiaryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datecreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Documentno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EarlierAdditionorDeduction")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Refno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("VAT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("WHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("approved")
                        .HasColumnType("bit");

                    b.Property<string>("createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("sendforapproval")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ColdingHeadId");

                    b.ToTable("CodingHead");
                });

            modelBuilder.Entity("DTOS.AppModel.RefTag", b =>
                {
                    b.Property<Guid>("RefnoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TagName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("serialNo")
                        .HasColumnType("int");

                    b.HasKey("RefnoID");

                    b.ToTable("RefTag");
                });

            modelBuilder.Entity("DTOS.AppModel.CodingDetail", b =>
                {
                    b.HasOne("DTOS.AppModel.CodingHead", "CodingHead")
                        .WithMany("CodingDetail")
                        .HasForeignKey("CodingHeadColdingHeadId");

                    b.Navigation("CodingHead");
                });

            modelBuilder.Entity("DTOS.AppModel.CodingHead", b =>
                {
                    b.Navigation("CodingDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
